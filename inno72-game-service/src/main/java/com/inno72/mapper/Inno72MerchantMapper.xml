<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inno72.mapper.Inno72MerchantMapper">
    <resultMap id="BaseResultMap" type="com.inno72.model.Inno72Merchant">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="merchant_code" jdbcType="VARCHAR" property="merchantCode"/>
        <result column="merchant_name" jdbcType="VARCHAR" property="merchantName"/>
        <result column="origin_flag" jdbcType="VARCHAR" property="originFlag"/>
        <result column="brand_name" jdbcType="VARCHAR" property="brandName"/>
        <result column="channel_id" jdbcType="VARCHAR" property="channelId"/>
        <result column="is_delete" jdbcType="INTEGER" property="isDelete"/>
        <result column="create_id" jdbcType="VARCHAR" property="createId"/>
        <result column="update_id" jdbcType="VARCHAR" property="updateId"/>
        <result column="sell_session_key" jdbcType="VARCHAR" property="sellSessionKey"/>
        <result column="merchant_id" jdbcType="VARCHAR" property="merchantId"/>
        <result column="wechat_qrcode_url" jdbcType="VARCHAR" property="wechatQrcodeUrl"/>
        <result column="wechat_user_api_url" jdbcType="VARCHAR" property="wechatUserApiUrl"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" javaType="java.time.LocalDateTime"
                typeHandler="org.apache.ibatis.type.LocalDateTimeTypeHandler"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" javaType="java.time.LocalDateTime"
                typeHandler="org.apache.ibatis.type.LocalDateTimeTypeHandler"/>
    </resultMap>

    <select id="selectByMachineCode" parameterType="string" resultMap="BaseResultMap">
        select m.* from inno72_interact_machine im
            join inno72_interact interact on im.interact_id = interact.id
            join inno72_interact_machine_time imt on im.id=imt.interact_machine_id

            left join inno72_interact_machine_goods img on img.interact_machine_id = im.id
            left join inno72_goods ig on ig.id = img.goods_id
            left join  inno72_merchant m on m.id = ig.seller_id
        where interact.`status` = 1 and im.machine_code= #{code}  and
              CURRENT_TIMESTAMP() BETWEEN imt.start_time and imt.end_time
    </select>

    <select id="selectBoundNameByActivityId" resultType="string" parameterType="string">
      select brand_name from inno72_merchant a1
      left join inno72_activity a2 on a1.id = a2.seller_id
      where a2.id = #{id}
    </select>

    <select id="selectShopCodeByPlanId" parameterType="string" resultType="string">

        select shop_code from inno72_shops where seller_id = (
            select id from inno72_merchant where id = (
                select seller_id from inno72_activity where id = (
                  select activity_id from inno72_activity_plan where id = #{activityPlanId}
                  )
            )
        )
        and is_delete = 0
    </select>
    <select id="findMerchantByName" parameterType="string" resultMap="BaseResultMap">

        select * from inno72_merchant where merchant_name like CONCAT('%',#{merchantName},'%') and is_delete = 0
    </select>
    <select id="findMerchantByByGoodsId" parameterType="string" resultMap="BaseResultMap">
        SELECT
            *
        FROM
            inno72_merchant m
        LEFT JOIN inno72_goods g
        on m.id = g.seller_id
        WHERE
            g.id = #{goodsId}
        AND m.is_delete = 0
    </select>

    <select id="findByGoodsId" resultMap="BaseResultMap" parameterType="string">
      select m.*, u.merchant_id as merchant_id from inno72_merchant m
       join inno72_goods g on g.seller_id = m.id
       left join inno72_merchant_user u on u.id = m.merchant_account_id
      where g.id=#{goodsId} and m.is_delete = 0
    </select>

    <select id="findByCoupon" resultMap="BaseResultMap" parameterType="string">
      select m.*,u.merchant_id as merchant_id from inno72_merchant m
         join inno72_shops shops on m.id = shops.seller_id
         join inno72_coupon c on c.shops_id = shops.id
         left join inno72_merchant_user u on u.id = m.merchant_account_id
          where c.id=#{itemId} and c.is_delete = 0
    </select>

    <select id="findByGoodsCode" resultMap="BaseResultMap" parameterType="string">
      select * from inno72_merchant m
       join inno72_goods g on g.seller_id = m.id
      where g.code=#{goodsCode} and m.is_delete = 0
    </select>

    <select id="findMerchantByMap" parameterType="java.util.Map" resultMap="BaseResultMap">
        select m.*, u.merchant_id as merchant_id from inno72_activity_shops ias
        left join inno72_shops s on ias.shops_id = s.id
        left join inno72_merchant m on s.seller_id = m.id
        left join inno72_merchant_user u on u.id = m.merchant_account_id
        where ias.activity_id = #{activityId} and m.merchant_code = #{merchantCode}
    </select>

    <select id="findMerchantByActivityId" parameterType="string" resultMap="BaseResultMap">
        select m.*, u.merchant_id as merchant_id from inno72_activity_shops ias
        left join inno72_shops s on ias.shops_id = s.id
        left join inno72_merchant m on s.seller_id = m.id
         left join inno72_merchant_user u on u.id = m.merchant_account_id
        where ias.activity_id = #{activityId} limit 0,1
    </select>
    <select id="findByMerchantCode" resultMap="BaseResultMap" parameterType="string">
      select * from inno72_merchant m
      where m.merchant_code = #{merchantCode} and m.is_delete = 0
    </select>
</mapper>