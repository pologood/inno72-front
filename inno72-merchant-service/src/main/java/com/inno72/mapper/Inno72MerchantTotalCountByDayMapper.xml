<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inno72.mapper.Inno72MerchantTotalCountByDayMapper">
    <resultMap id="BaseResultMap" type="com.inno72.model.Inno72MerchantTotalCountByDay">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="date" jdbcType="VARCHAR" property="date"/>
        <result column="city" jdbcType="VARCHAR" property="city"/>
        <result column="activity_id" jdbcType="VARCHAR" property="activityId"/>
        <result column="activity_name" jdbcType="VARCHAR" property="activityName"/>
        <result column="goods_id" jdbcType="VARCHAR" property="goodsId"/>
        <result column="goods_name" jdbcType="VARCHAR" property="goodsName"/>
        <result column="merchant_id" jdbcType="VARCHAR" property="merchantId"/>
        <result column="stay_num" jdbcType="INTEGER" property="stayNum"/>
        <result column="order_qty_total" jdbcType="INTEGER" property="orderQtyTotal"/>
        <result column="order_qty_succ" jdbcType="INTEGER" property="orderQtySucc"/>
        <result column="goods_num" jdbcType="INTEGER" property="goodsNum"/>
        <result column="coupon_num" jdbcType="INTEGER" property="couponNum"/>
        <result column="concern_num" jdbcType="INTEGER" property="concernNum"/>
        <result column="pv" jdbcType="INTEGER" property="pv"/>
        <result column="uv" jdbcType="INTEGER" property="uv"/>
        <result column="seller_id" jdbcType="VARCHAR" property="sellerId"/>
        <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime"
                javaType="java.time.LocalDateTime"
                typeHandler="org.apache.ibatis.type.LocalDateTimeTypeHandler"/>
    </resultMap>
    <select id="selectList" resultMap="BaseResultMap">
        select * from inno72_merchant_total_count_by_day
        where activity_id = #{activityId} and merchant_id = #{merchantId}
        <if test="city != null and city != ''">
            and city = #{city}
        </if>
        <if test="goods != null and goods != ''">
            and goods_id = #{goods}
        </if>
        <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
            and `date` between #{startDate} and #{endDate}
        </if>
        order by `date`, city
    </select>

    <select id="findGoodsByMerchantId" resultType="java.util.Map" parameterType="string">
        SELECT ig.id as goodsId, ig.name as goodsName
        FROM inno72_interact_machine im
            JOIN `inno72_interact_machine_goods` img ON im.id = img.interact_machine_id
            JOIN inno72_goods ig ON img.goods_id = ig.id
        WHERE im.interact_id = #{activityId}
              AND ig.seller_id IN (SELECT id
                                   FROM inno72.inno72_merchant
                                   WHERE merchant_account_id =
                                         (select id from inno72_merchant_user where merchant_id = #{merchantId}))
              AND ig.is_delete = 0
        GROUP BY im.interact_id, ig.id
    </select>

    <select id="findActivityByMerchantId" resultType="java.util.Map" parameterType="string">
        select act.activityId, act.activityName, ifnull(interact.channel, "002001") as code
        from (
            select distinct
                activity_id   as activityId,
                activity_name as activityName,
                merchant_id
            from inno72_merchant_total_count
            where merchant_id = #{merchantId}
        ) act
        left join inno72_interact interact on interact.id = act.activityId

    </select>
    <select id="findMinMaxDate" resultType="java.util.Map">
        select date_format(min(date), '%Y-%m-%d') as min, date_format(max(date), '%Y-%m-%d') as max from inno72_merchant_total_count_by_day
        where activity_id = #{activityId} and merchant_id = #{merchantId}
        group by activity_id, merchant_id
    </select>
</mapper>